---
import { TRANSLATIONS, getLocale, useTranslations } from "@/i18n"
import Layout from "@/layouts/Layout.astro"
import Contact from "@/sections/Contact.astro"
import Experience from "@/sections/Experience.astro"
import Hero from "@/sections/Hero.astro"
import Locales from "@/sections/Locales.astro"
import Projects from "@/sections/Projects.astro"
import Themes from "@/sections/Themes.astro"

export function getStaticPaths() {
  return Object.keys(TRANSLATIONS).map((locale) => ({ params: { locale } }))
}

const locale = getLocale(Astro.currentLocale)
const t = useTranslations(locale)
---

<Layout
  lang={locale}
  title={t("title", t("subtitle"))}
  description={t("description")}
>
  <main
    class="mx-auto my-24 grid max-w-[33rem] auto-cols-fr grid-cols-1 gap-4 md:grid-cols-2 lg:max-w-[50rem] lg:grid-cols-3"
  >
    <Hero class="md:col-span-2" delay="0.2s" />
    <Projects class="md:row-span-2" delay="0.6s" />
    <Themes delay="1.0s" />
    <Locales delay="1.2s" />
    <Experience class="md:col-span-2" delay="0.4s" />
    <Contact class="col-span-1 md:col-span-2 lg:col-span-1" delay="0.8s" />
  </main>
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    const articles = document.querySelectorAll("section article")

    const callback = (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry) => {
        entry.target.classList.toggle("blur-[0.125rem]", !entry.isIntersecting)
        entry.target.classList.toggle("opacity-30", !entry.isIntersecting)
      })
    }

    const observer = new IntersectionObserver(callback, {
      threshold: 0.7,
    })

    function handleVisibilityChange() {
      if (document.hidden) observer.disconnect()
      else articles.forEach((article) => observer.observe(article))
    }

    articles.forEach((article) => {
      article.classList.add("motion-safe:transition-[filter,opacity]")
      observer.observe(article)
    })
    document.addEventListener("visibilitychange", handleVisibilityChange)
  })
</script>
